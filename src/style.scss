.row {
    margin: 20px;
}

//Realizo un @mixin como si fuese una función para poder optimizar código y no repetir el mismo código para los tres contenedores.
@mixin styleContainers ($containerId, $base-color, $base-letter) {

    //#{$containerId} se reemplaza por 1, 2 o 3. Esto se realiza cuando llamo al "mixin con @include (al final del código)
    .container-#{$containerId} {
        grid-template-columns: repeat(4, 100px) 150px repeat(4, 100px);
        grid-template-rows: 100px;
        display: grid;
        gap: 1rem;
        text-align: center;
        
        //variables que uso para incrementar y decrementar. Aquí está desde donde parto.
        $i: 1;
        $amountDarken: 5%;
        $amountLighten: 10%;
        
        @while $i <= 4  {
            .box-darken-#{$i} {
                background-color: darken($color: $base-color, $amount: $amountDarken);
                color:darken($color: $base-letter, $amount: $amountDarken); 
                border-radius: 5px; 
                //con padding consigo que se center de forma vertical.
                padding-top: 40%;
            
            }
        
            .box-lighten-#{$i} {
                background-color: lighten($color: $base-color, $amount: $amountLighten);
                color:lighten($color: $base-letter, $amount: $amountLighten);
                border-radius: 5px;
                padding-top: 40%;
    
            }
            
                .box-base-color {
                    background-color: $base-color;
                    //color de la letra:
                    color:white;
                    border-radius: 5px;
                    padding-top: 25%;
                }

                //update.
                $i: $i + 1;
                $amountDarken: $amountDarken + 5%;
                $amountLighten: $amountLighten + 10%;
        }
    }
}    

//ejecuto mixin
@include styleContainers(1, red, cornflowerblue);
@include styleContainers(2, blue, yellow);
@include styleContainers(3, green, mediumorchid);









